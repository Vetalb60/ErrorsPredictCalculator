// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "multipart/form-data"
  ],
  "produces": [
    "application/pdf",
    "text/csv",
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Server for get responce of work hard algorithm.Copr by alex.green 2022",
    "title": "Prediction algorithm's server",
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Check healthz of implemented server.",
        "responses": {
          "200": {
            "description": "returns a status",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/delete/{id}": {
      "delete": {
        "summary": "Delete file from database.",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/DeleteKey"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Get files list from database.",
        "operationId": "getList",
        "responses": {
          "200": {
            "description": "returns a list",
            "schema": {
              "$ref": "#/definitions/Array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Check healthz of implemented server.",
        "responses": {
          "200": {
            "description": "returns a status",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/method/{id}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Calculate energy of error selected method of predict.",
        "parameters": [
          {
            "description": "The method of predict.",
            "name": "method",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Method"
            }
          },
          {
            "type": "integer",
            "description": "Identificator of decode file.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Energy"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Uploads a file.",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "upfile",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/PostUpload"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Array": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "file_size": {
              "type": "integer"
            },
            "id": {
              "type": "integer"
            },
            "insert_data": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    "DeleteKey": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Energy": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "energy": {
              "type": "string"
            }
          }
        }
      }
    },
    "Error": {
      "description": "Error message",
      "type": "object",
      "required": [
        "message",
        "code"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Health": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Method": {
      "type": "object",
      "required": [
        "method"
      ],
      "properties": {
        "method": {
          "type": "string"
        }
      }
    },
    "PostUpload": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "multipart/form-data"
  ],
  "produces": [
    "application/json",
    "application/pdf",
    "text/csv"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Server for get responce of work hard algorithm.Copr by alex.green 2022",
    "title": "Prediction algorithm's server",
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Check healthz of implemented server.",
        "responses": {
          "200": {
            "description": "returns a status",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/delete/{id}": {
      "delete": {
        "summary": "Delete file from database.",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/DeleteKey"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Get files list from database.",
        "operationId": "getList",
        "responses": {
          "200": {
            "description": "returns a list",
            "schema": {
              "$ref": "#/definitions/Array"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Check healthz of implemented server.",
        "responses": {
          "200": {
            "description": "returns a status",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/method/{id}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Calculate energy of error selected method of predict.",
        "parameters": [
          {
            "description": "The method of predict.",
            "name": "method",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Method"
            }
          },
          {
            "type": "integer",
            "description": "Identificator of decode file.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Energy"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Uploads a file.",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "upfile",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "successful response",
            "schema": {
              "$ref": "#/definitions/PostUpload"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Array": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ArrayItems0"
        }
      }
    },
    "ArrayItems0": {
      "type": "object",
      "properties": {
        "file_size": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "insert_data": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DeleteKey": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Energy": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/EnergyItems0"
        }
      }
    },
    "EnergyItems0": {
      "type": "object",
      "properties": {
        "energy": {
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "Error message",
      "type": "object",
      "required": [
        "message",
        "code"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Health": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Method": {
      "type": "object",
      "required": [
        "method"
      ],
      "properties": {
        "method": {
          "type": "string"
        }
      }
    },
    "PostUpload": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"CourseWork/gen/models"
)

// PostUploadOKCode is the HTTP code returned for type PostUploadOK
const PostUploadOKCode int = 200

/*PostUploadOK successful response

swagger:response postUploadOK
*/
type PostUploadOK struct {

	/*
	  In: Body
	*/
	Payload *models.PostUpload `json:"body,omitempty"`
}

// NewPostUploadOK creates PostUploadOK with default headers values
func NewPostUploadOK() *PostUploadOK {

	return &PostUploadOK{}
}

// WithPayload adds the payload to the post upload o k response
func (o *PostUploadOK) WithPayload(payload *models.PostUpload) *PostUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post upload o k response
func (o *PostUploadOK) SetPayload(payload *models.PostUpload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUploadBadRequestCode is the HTTP code returned for type PostUploadBadRequest
const PostUploadBadRequestCode int = 400

/*PostUploadBadRequest Bad request

swagger:response postUploadBadRequest
*/
type PostUploadBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostUploadBadRequest creates PostUploadBadRequest with default headers values
func NewPostUploadBadRequest() *PostUploadBadRequest {

	return &PostUploadBadRequest{}
}

// WithPayload adds the payload to the post upload bad request response
func (o *PostUploadBadRequest) WithPayload(payload *models.Error) *PostUploadBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post upload bad request response
func (o *PostUploadBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUploadBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUploadInternalServerErrorCode is the HTTP code returned for type PostUploadInternalServerError
const PostUploadInternalServerErrorCode int = 500

/*PostUploadInternalServerError Internal server error

swagger:response postUploadInternalServerError
*/
type PostUploadInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostUploadInternalServerError creates PostUploadInternalServerError with default headers values
func NewPostUploadInternalServerError() *PostUploadInternalServerError {

	return &PostUploadInternalServerError{}
}

// WithPayload adds the payload to the post upload internal server error response
func (o *PostUploadInternalServerError) WithPayload(payload *models.Error) *PostUploadInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post upload internal server error response
func (o *PostUploadInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUploadInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

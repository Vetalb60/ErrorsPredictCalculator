// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"exec/client/models"
)

// PostMethodIDReader is a Reader for the PostMethodID structure.
type PostMethodIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMethodIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostMethodIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostMethodIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostMethodIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostMethodIDOK creates a PostMethodIDOK with default headers values
func NewPostMethodIDOK() *PostMethodIDOK {
	return &PostMethodIDOK{}
}

/* PostMethodIDOK describes a response with status code 200, with default header values.

OK
*/
type PostMethodIDOK struct {
	Payload models.Energy
}

func (o *PostMethodIDOK) Error() string {
	return fmt.Sprintf("[POST /method/{id}][%d] postMethodIdOK  %+v", 200, o.Payload)
}
func (o *PostMethodIDOK) GetPayload() models.Energy {
	return o.Payload
}

func (o *PostMethodIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMethodIDBadRequest creates a PostMethodIDBadRequest with default headers values
func NewPostMethodIDBadRequest() *PostMethodIDBadRequest {
	return &PostMethodIDBadRequest{}
}

/* PostMethodIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostMethodIDBadRequest struct {
	Payload *models.Error
}

func (o *PostMethodIDBadRequest) Error() string {
	return fmt.Sprintf("[POST /method/{id}][%d] postMethodIdBadRequest  %+v", 400, o.Payload)
}
func (o *PostMethodIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostMethodIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMethodIDInternalServerError creates a PostMethodIDInternalServerError with default headers values
func NewPostMethodIDInternalServerError() *PostMethodIDInternalServerError {
	return &PostMethodIDInternalServerError{}
}

/* PostMethodIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostMethodIDInternalServerError struct {
	Payload *models.Error
}

func (o *PostMethodIDInternalServerError) Error() string {
	return fmt.Sprintf("[POST /method/{id}][%d] postMethodIdInternalServerError  %+v", 500, o.Payload)
}
func (o *PostMethodIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostMethodIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

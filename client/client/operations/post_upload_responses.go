// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"exec/client/models"
)

// PostUploadReader is a Reader for the PostUpload structure.
type PostUploadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUploadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUploadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUploadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUploadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUploadOK creates a PostUploadOK with default headers values
func NewPostUploadOK() *PostUploadOK {
	return &PostUploadOK{}
}

/* PostUploadOK describes a response with status code 200, with default header values.

successful response
*/
type PostUploadOK struct {
	Payload *models.PostUpload
}

func (o *PostUploadOK) Error() string {
	return fmt.Sprintf("[POST /upload][%d] postUploadOK  %+v", 200, o.Payload)
}
func (o *PostUploadOK) GetPayload() *models.PostUpload {
	return o.Payload
}

func (o *PostUploadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostUpload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadBadRequest creates a PostUploadBadRequest with default headers values
func NewPostUploadBadRequest() *PostUploadBadRequest {
	return &PostUploadBadRequest{}
}

/* PostUploadBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostUploadBadRequest struct {
	Payload *models.Error
}

func (o *PostUploadBadRequest) Error() string {
	return fmt.Sprintf("[POST /upload][%d] postUploadBadRequest  %+v", 400, o.Payload)
}
func (o *PostUploadBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUploadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUploadInternalServerError creates a PostUploadInternalServerError with default headers values
func NewPostUploadInternalServerError() *PostUploadInternalServerError {
	return &PostUploadInternalServerError{}
}

/* PostUploadInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostUploadInternalServerError struct {
	Payload *models.Error
}

func (o *PostUploadInternalServerError) Error() string {
	return fmt.Sprintf("[POST /upload][%d] postUploadInternalServerError  %+v", 500, o.Payload)
}
func (o *PostUploadInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUploadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
